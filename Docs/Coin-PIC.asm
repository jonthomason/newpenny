;	MPC
;	COIN.ASM
;	SEPTEMBER 26, 1993
;	DATED PER REVISION
;	REV 1-D	9/28/93	(ADDED PAUSE ROUTINE)
;	REV 1-E	3/ 3/ 94	(INVERTED CYCLE START)
;
;
;	CHECKSUM  ­_____________
;
;	AUTHOR BILL BARTSCH
;	TRANSCRIBED BY DAVID NAEGLE

$DEBUG

$MOD51

DSEG

;
;	INPUTS DEFINED:
;
;	P0.0		GO/NO-GO		GO=0, HALT=1
;	P0.1		COIN ACCEPT
;	P0.2		DIE # 4
;	P0.3		DIE # 3
;	P0.4		DIE # 2
;	P0.5		DIE # 1
;	P0.6		90 DEGREE
;	PO.7		HOME
;
;	OUTPUTS DEFINED:
;
;	P1.0		CYCLE START
;	P1.1		SOLENOID
;	P1.2		MOTOR RUN
;	P1.3		COUNTER
;	P1.4		"A"	 		UNUSED
;	P1.5		"B"	 		UNUSED
;	P1.6		"C"	 		UNUSED
;	P1.7		"D"	 		UNUSED
;	P2.0		BCD LEAST		ACTIVE LOW
;	P2.1		BCD
;	P2.2		BCD
;	P2.3		BCD MOST
;	P2.4		BCD LEAST
;	P2.5		BCD
;	P2.6		BCD
;	P2.7		BCD MOST
;
;	DISPLAY CODES . . . . . . . . . . . . . . . . . 00 = MOTOR RUN
;							01 = SELECT # 1
;							02 = SELECT # 2
;							03 = SELECT # 3
;							04 = SELECT # 4
;							33 = COUNTER
;							50 = MOTOR HOME
;							51 = COIN ACCEPT
;							88 = SOLENOID
;							99 = STOP, COUNTER MISSING

	msHi	equ	Ofah				; MSB OF COUNTER FOR DELAY

	msLo	equ	Oceh				; LSB OF COUNTER FOR DELAY
;
;

	CSEG						; CODE SEGMENT
	LJMP RESET

	ORG 0BH

	MOV TH0,	#msHI
	MOV TL0,	#msL0
	JMP TIMER_0

	ORG 100H

	RESET:
		MOV P1, #00001111B

		MOV TMOD, #1

		SETB TR0

		MOV IE,#2

		CLR P1. 0 				; PULLS IN CYCLE START RELAY

	EXEC:					; WAITS FOR COIN
		LCALL  GO_NO_GO
		LCALL HOME
		LCALL FLASH

	FLASH:
		CLR   P1.5				; FLASHES LED "A" ON
		LCALL MSWAIT
		SETB P1.5				; FLASHES LED "A" OFF
		CLR   P1.4				; FLASHES LED "B" ON
		LCALL MSWAIT
		SETB   P1.4				; FLASHES LED "B" OFF
		CLR   P1.7				; FLASHES LED "C" ON
		LCALL MSWAIT
		SETB   P1.7				; FLASHES LED "C" OFF
		CLR   P1.6 				; FLASHES LED "D" ON
		LCALL MSWAIT
		SETB   P1.6				; FLASHES LED "D" OFF
		LCALL MSWAIT
		RET

	MSWAIT:
		MOV R2, #023H			; DELAY ROUTINE

	MSLOOP:
		MOV TL0,  #msLo
		MOV TH0, #msHi
		CLR TF0
		JNB TF0, $
		DJNZ   R2, MSLOOP
		RET

	GO_NO_GO:
		JB P0.0, END_GO_NO_GO	; COUNTER DETECT ROUTINE [JonT] this appears to return and GO on P0.0 being set, but the doc says set is HALT. Hmmm.
		MOV P2,#99H				; DISPLAYS "99" = FAULT
		JMP  GO_NO_GO			; As long as the P0.0 bit is clear, it loops displaying fault. Hmmm.

	END_GO_NO_GO:
		RET

	HOME:
		CLR  P1.2					; TURNS ON MOTOR
		MOV P2, #00H			; DISPLAYS “00”  =  MOTOR RUN
		JB  P0.7, $				; TURNS OFF MOTOR WHEN HOME

							; STOP MOTOR ROUTINE

		SETB  P1.2				; TURNS OFF MOTOR
		MOV   P2, #05H			; DISPLAYS “50”  =  HOME

	IDLE:
		JB  P0.1, RUN			;  JUMP TO COIN ACCEPT ROUTINE
		LCALL  FLASH
		JMP  IDLE




							; COIN ACCEPT ROUTINE
	RUN:
		SETB   P1.0				; TURNS OFF CYCLE START (LATCH)
		MOV    P2,  #15H			; DISPLAYS  “51”  =  COIN ACCEPT
		LCALL FLASH


							; COUNTER ROUTINE
	DIE_SELECT:
		JB P0.2, SELECT_4		; SELECT DIE #4 ACTIVE LOW
		JB P0.3, SELECT_3		; SELECT DIE #3 ACTIVE LOW
		JB P0.4, SELECT_2		; SELECT DIE #2 ACTIVE LOW
		JB P0.5, SELECT_1		; SELECT DIE #1 ACTIVE LOW

		JMP DIE_SELECT			;  LOOP UNTIL ONE IS SELECTED

	SELECT_4:
		MOV R3, #04			; MOVE #4 TO REGISTER 3
		MOV P2, #40H			; DISPLAYS "04" = DIE # 4
		JMP ZEBRA				; MOVE TO DECREMENT ROUTINE
							; DECREMENT ROUTINE = ZEBRA
	SELECT_3:
		MOV R3, #03			; MOVES #3 TO REGISTER 3
		MOV P2, #30H			; DISPLAYS "03" = DIE # 3
		JMP ZEBRA				; MOVE TO DECREMENT ROUTINE
							; DECREMENT ROUTINE = ZEBRA
	SELECT_2:
		MOV R3, #02			; MOVES #2 TO REGISTER 3
		MOV P2, #20H			; DISPLAYS "02" = DIE # 2
		JMP ZEBRA				; MOVE TO DECREMENT ROUTINE
							; DECREMENT ROUTINE = ZEBRA
	SELECT_1:
		MOV R3, #01			; MOVES #1 TO REGISTER 3
		MOV P2, #10H			; DISPLAYS "01" = DIE # 1
		JMP ZEBRA				; MOVES TO DECREMENT ROUTINE
							; DECREMENT ROUTINE = ZEBRA
	ZEBRA:
		CLR P1.2				; RUNS MOTOR
		JNB P0.6, $				; 90 DEGREE SENSOR (PULSE)
		LCALL FLASH			; DEBOUNCE CONTACT
		LCALL PAUSE
		DJNZ R3, ZEBRA			; DECREMENT REGISTER #3

		LCALL  MSWAIT			; PAUSE BEFORE TURNING ON SOLENOID

		CLR P1.1				; SOLENOID ON
		MOV P2, #88H			; DISPLAYS "88" = SOLENOID
		LCALL FLASH			; WAIT ROUTINE
		LCALL PAUSE			; PAUSE = WAIT X 10
		SETB P1.1				; SOLENOID OFF

		CLR P1.0				; CYCLE_START TURN ON

		CLR P1.3				; TURNS COUNTER ON (PULSE)
		MOV P2, #33H			; DISPLAYS "33" = COUNTER
		LCALL FLASH			; WAIT
		LCALL PAUSE			; PAUSE = WAIT X 10
		SETB P1.3				; TURNS COUNTER OFF (PULSE)

		SETB P1.2				; TURNS MOTOR OFF

		JMP EXEC

	PAUSE:					; EXTENDED WAIT ROUTINE
		LCALL MSWAIT
		LCALL MSWAIT
		LCALL MSWAIT
		LCALL MSWAIT
		LCALL MSWAIT
		LCALL MSWAIT
		LCALL MSWAIT
		LCALL MSWAIT
		LCALL MSWAIT
		LCALL MSWAIT
		RET

	TIMER_0:
		SETB TF0
		RETI

		END
